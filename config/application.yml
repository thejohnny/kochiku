# Email address to use in the 'from' field for emails sent by Kochiku.
sender_email_address: 'kochiku@example.com'

# Email address where kochiku should send problems with the build system (for example, errors),
# as distinct from failures in a particular test (which go to the people who committed code).
kochiku_notifications_email_address: 'kochiku-notifications@example.com'

# Domain name to use in constructing generic addresses. For example noreply@example.com in git commits.
domain_name: 'example.com'

# Set to true if Kochiku is served over https
use_https: false

# Host name where Kochiku is serving web pages.
kochiku_host: '10.211.55.66'

# If you commit with hitch/git-pair, etc, set this in order to send email to each person in the pair.
# For example, github+joe+bob@example.com will turn into emails to joe@example.com and bob@example.com
# if git_pair_email_prefix is set to 'github'.
git_pair_email_prefix: 'github'

# Mail server which will accept mail on port 25 (standard SMTP port). If you need to use another port,
# or other settings, you currently need to edit the kochiku source (config.action_mailer settings in
# config/environments/production.rb).
smtp_server: 'localhost'

# Host to connect to for Redis communication. The standard Redis port of 6379 will be used.
redis_host: '127.0.0.1'

# List your git servers (at least for now, they need to be either github, github enterprise, or
# Atlassian Stash for things like constructing URLs to pages on those servers. Would be nice to
# just turn off the fancy features for a vanilla git server instead, but that isn't yet possible).
# possible values for type are: github or stash
git_servers:
  github.com:
    type: github

# It is highly recommended that you create an OAuth token for Kochiku on
# Github. This will allow Kochiku to do many things including display build
# status on pull requests.
#  github.com:
#    type: github
#    oauth_token_file: /path/to/github_oauth_token

# If you would like Kochiku to clone and fetch repositories from a git mirror
# define the repository and fill in the url to your mirror.
#  git.example.com:
#    mirror: 'git://git-mirror.example.com/'

# If you have multiple domains pointing at your git server then define them as aliases
#  git.example.com:
#    aliases:
#      - alias.example
#      - git.alias.com

# Example of Atlassian Stash integration.
#  stash.example.com:
#    type: stash
#    username: kochiku-robot
#    password_file: config/secrets/kochiku-robot-password

# if you want to manage ec2 workers automatically, the settings go here.  The sampling job runs
# every ten seconds on the high queue, which runs on the kochiku master.
worker_thresholds:
  # Never go below this number, even if they are all idle
  # minimum_total_workers: 50
  # never go above this many workers
  # maximum_total_workers: 500
  # When adjusting up or down, do this many instances at a time
  # instance_chunk_size: 10
  # must collect this many samples that meet a criteria before adjustment is made.
  # This is in 10-second counts; 30=300s=5m
  # number_of_samples: 30
  # in order to adjust down, must have more than this many idle instances
  # idle_excess_count: 50
  # in order to adjust up, must have less than this many idle instances
  # idle_insufficient_count: 30
  # Allow worker count to vary by this much during time window without cancelling autoscale
  # worker_fluctuation_tolerance: 5
  # Hard-path to executable that spins up <n> instances
  # spin_up_script: /Users/square/Development/slave-driver/new-instance.rb
  # queue that auto-sizes.  Schedule the shutdown instance jobs on this queue.
  # autosize_queue: developer-linux
